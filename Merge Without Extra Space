
class Solution {
  public:
    void mergeArrays(vector<int>& a, vector<int>& b) {
        int n = a.size(), m = b.size();
    int gap = ceil((double)(n + m) / 2); 

    while (gap > 0) {
        int i = 0, j = gap;

        while (j < (n + m)) {
            if (j < n && a[i] > a[j]) {
                swap(a[i], a[j]);
            }
            else if (j >= n && i < n && a[i] > b[j - n]) {
                swap(a[i], b[j - n]);
            }
            else if (j >= n && i >= n && b[i - n] > b[j - n]) {
                swap(b[i - n], b[j - n]);
            }

            i++;
            j++;
        }

        gap = (gap == 1) ? 0 : ceil((double)gap / 2);
    }
    }
};

